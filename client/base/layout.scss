@import 'constants';
@import 'colors';
@import 'mixins';

@mixin make-layout($postfix: '') {
  .-layout-h#{$postfix} {
    display: flex;
    flex-direction: row;
  }

  .-layout-h-reverse#{$postfix} {
    display: flex;
    flex-direction: row-reverse;
  }

  .-layout-v#{$postfix} {
    display: flex;
    flex-direction: column;
  }

  .-layout-v-reverse#{$postfix} {
    display: flex;
    flex-direction: column-reverse;
  }

  .-horizontal#{$postfix} {
    flex-direction: row;
    &-reverse {
      flex-direction: row-reverse;
    }
  }
  .-vertical#{$postfix} {
    flex-direction: column;
    &-reverse {
      flex-direction: column-reverse;
    }
  }
}

@mixin make-hide($postfix: '') {
  .-hide#{$postfix} {
    display: none !important;
  }
}

@mixin make-grid($postfix: '') {
  @for $i from 1 through 12 {
    .-flex-#{$i}#{$postfix} {
      flex: $i;
    }

    .-order-#{$i}#{$postfix} {
      order: $i;
    }

    .-grid-#{$i}#{$postfix} {
      flex-basis: 100% / 12 * $i;
      max-width: 100% / 12 * $i;
    }
  }
}

@mixin make-inside-classes() {
  $max-widths: 280, 300, 360, 600, 640, 800, 900, 948, 1024, 1080, 1160, 1280, 1440;
  .-inside {
    margin: 0 auto;
    max-width: 948px;

    @each $width in $max-widths {
      &-#{$width} {
        margin: 0 auto;
        max-width: #{$width}px;
      }
    }
  }
}

@mixin make-utils($postfix: '') {
  $colorNames: 'white', 'black', 'blue', 'orange', 'gold', 'red-orange', 'dark-red', 'green',
    'green-fresh', 'grey-20', 'blue-grey-40';
  $colorsMap: (
    'white': $white,
    'black': $black,
    'blue': $blue,
    'orange': $orange,
    'gold': $gold,
    'red-orange': $red-orange,
    'dark-red': $dark-red,
    'green': $green,
    'green-fresh': $green-fresh,
    'grey-20': $grey-20,
    'blue-grey-40': $blue-grey-40,
  );

  .-border-dark#{$postfix} {
    border: 1px solid $grey-40;
  }

  .-separator-h#{$postfix} {
    border-bottom: 1px solid $grey-10;
  }

  .-separator-v#{$postfix} {
    border-right: 1px solid $grey-10;
  }

  .-separator-h-dark#{$postfix} {
    border-bottom: 1px solid $grey-40;
  }

  .-separator-v-dark#{$postfix} {
    border-right: 1px solid $grey-40;
  }

  @each $color in $colorNames {
    $c: map-get($colorsMap, $color);

    .-separator-h {
      &-#{$color}#{$postfix} {
        border-bottom: 1px solid $c;
      }

      &-thick-#{$color}#{$postfix} {
        border-bottom: 2px solid $c;
      }
    }

    .-separator-v {
      &-#{$color}#{$postfix} {
        border-right: 1px solid $c;
      }

      &-thick-#{$color}#{$postfix} {
        border-right: 2px solid $c;
      }
    }
  }

  /* alignment in cross axis */
  .-start#{$postfix},
  .-align-start#{$postfix} {
    align-items: flex-start;
  }
  .-center#{$postfix},
  .-center-center#{$postfix} {
    align-items: center;
  }

  .block.-layout-h.-align-center#{$postfix},
  .block.-layout-v.-align-center#{$postfix} {
    align-items: center;
    text-align: inherit;
  }

  .-end#{$postfix},
  .-align-end#{$postfix} {
    align-items: flex-end;
  }
  .-stretch#{$postfix},
  .-align-stretch#{$postfix} {
    align-items: stretch;
  }
  /* alignment in main axis */
  .-justify-start#{$postfix} {
    justify-content: flex-start;
  }
  .-justify-center#{$postfix},
  .-center-center#{$postfix} {
    justify-content: center;
  }
  .-justify-end#{$postfix} {
    justify-content: flex-end;
  }
  .-justify-around#{$postfix} {
    justify-content: space-around;
  }
  .-justify#{$postfix},
  .-justify-between {
    justify-content: space-between;
  }
  .-flex#{$postfix} {
    flex: 1;
  }
  .-flex-auto#{$postfix} {
    flex-basis: auto;
  }
  .-flex-none#{$postfix} {
    flex: none;
  }
  .-wrap#{$postfix} {
    flex-wrap: wrap;
  }
  .-wrap-reverse#{$postfix} {
    flex-wrap: wrap-reverse;
  }
  .-width-150#{$postfix} {
    width: 150px;
    max-width: 150px;
    min-width: 150px;
    flex-basis: 150px;
  }
  .-width-200#{$postfix} {
    width: 200px;
    max-width: 200px;
    min-width: 200px;
    flex-basis: 200px;
  }
  .-width-600#{$postfix} {
    width: 600px;
    max-width: 600px;
    min-width: 600px;
    flex-basis: 600px;
  }
  .-width-896#{$postfix} {
    width: 896px;
    max-width: 896px;
    min-width: 896px;
    flex-basis: 896px;
  }

  .-max-height-300#{$postfix} {
    max-height: 300px;
  }

  .-self-start#{$postfix} {
    align-self: flex-start;
  }
  .-self-center#{$postfix} {
    align-self: center;
  }
  .-self-end#{$postfix} {
    align-self: flex-end;
  }
  .-self-stretch#{$postfix} {
    align-self: stretch;
  }
}

.-layout {
  display: flex;
  &-inline {
    display: inline-flex;
  }
}

.-desaturated {
  @include desaturate();
}

.-display-inline {
  display: inline;
}

.-display-inline-block {
  display: inline-block;
}

.-display-block {
  display: block;
}

.-position-absolute {
  position: absolute;
}

.-position-relative,
.-relative {
  position: relative;
}

@include make-layout();
@include make-hide();
@include make-utils();

.-flex-row-wrap {
  flex-flow: row wrap;
}

.-full-height {
  height: 100%;
}

.-full-width {
  width: 100%;
}

.-half-width {
  width: 50%;
}

.-fit {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}
.-fit-top-left {
  position: absolute;
  top: 0;
  left: 0;
}
.-fit-top-center {
  position: absolute;
  margin: auto;
  top: 0;
  left: 0;
  right: 0;
}
.-fit-sidebar-left {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 256px;
}
.-fit-sidebar-right {
  position: absolute;
  top: 0;
  right: 256px;
  bottom: 0;
  left: 0;
}
.-fit-sidebar-both {
  position: absolute;
  top: 0;
  right: 256px;
  bottom: 0;
  left: 256px;
}
.-sidebar-left {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  width: 256px;
}
.-sidebar-right {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  width: 256px;
}
.-scroll {
  overflow: auto;
}
.-scroll-h {
  overflow-x: auto;
  overflow-y: hidden;
}
.-scroll-v {
  overflow-x: hidden;
  overflow-y: auto;
}
.-no-scroll,
.-overflow-hidden {
  overflow: hidden;
}

.-transparent {
  opacity: 0.5;
}

.-visibility-hidden {
  visibility: hidden;
}

@include make-inside-classes();
@include make-grid();

@media (max-width: $small) {
  @include make-layout(-s);
  @include make-hide(-s);
}
@media (max-width: $xsmall) {
  @include make-layout(-xs);
  @include make-hide(-xs);
}
@media (max-width: $xxsmall) {
  @include make-layout(-xxs);
  @include make-hide(-xxs);
}
@media (min-width: $small + 1) and (max-width: $large - 1) {
  @include make-layout(-m);
  @include make-hide(-m);
}
@media (min-width: $large) {
  @include make-layout(-l);
  @include make-hide(-l);
}
@media (min-width: $xlarge) {
  @include make-layout(-xl);
  @include make-hide(-xl);
}
@media (min-width: $xxlarge) {
  @include make-layout(-xxl);
  @include make-hide(-xxl);
}

@media (max-width: $xxsmall) {
  @include make-layout(-xxs-lte);
  @include make-hide(-xxs-lte);
  @include make-grid(-xxs-lte);
  @include make-utils(-xxs-lte);
}
@media (max-width: $xsmall) {
  @include make-layout(-xs-lte);
  @include make-hide(-xs-lte);
  @include make-grid(-xs-lte);
  @include make-utils(-xs-lte);
}
@media (max-width: $small) {
  @include make-layout(-s-lte);
  @include make-hide(-s-lte);
  @include make-grid(-s-lte);
  @include make-utils(-s-lte);
}
@media (max-width: $medium) {
  @include make-layout(-m-lte);
  @include make-hide(-m-lte);
  @include make-grid(-m-lte);
  @include make-utils(-m-lte);
}
@media (max-width: $large) {
  @include make-layout(-l-lte);
  @include make-hide(-l-lte);
  @include make-grid(-l-lte);
  @include make-utils(-l-lte);
}
@media (max-width: $xlarge) {
  @include make-layout(-xl-lte);
  @include make-hide(-xl-lte);
  @include make-grid(-xl-lte);
  @include make-utils(-xl-lte);
}
@media (max-width: $xxlarge) {
  @include make-layout(-xxl-lte);
  @include make-hide(-xxl-lte);
  @include make-grid(-xxl-lte);
  @include make-utils(-xxl-lte);
}

@media (min-width: $xxsmall + 1) {
  @include make-layout(-xxs-gt);
  @include make-hide(-xxs-gt);
  @include make-grid(-xxs-gt);
  @include make-utils(-xxs-gt);
}
@media (min-width: $xsmall + 1) {
  @include make-layout(-xs-gt);
  @include make-hide(-xs-gt);
  @include make-grid(-xs-gt);
  @include make-utils(-xs-gt);
}
@media (min-width: $small + 1) {
  @include make-layout(-s-gt);
  @include make-hide(-s-gt);
  @include make-grid(-s-gt);
  @include make-utils(-s-gt);
}
@media (min-width: $medium + 1) {
  @include make-layout(-m-gt);
  @include make-hide(-m-gt);
  @include make-grid(-m-gt);
  @include make-utils(-m-gt);
}
@media (min-width: $large + 1) {
  @include make-layout(-l-gt);
  @include make-hide(-l-gt);
  @include make-grid(-l-gt);
  @include make-utils(-l-gt);
}
@media (min-width: $xlarge + 1) {
  @include make-layout(-xl-gt);
  @include make-hide(-xl-gt);
  @include make-grid(-xl-gt);
  @include make-utils(-xl-gt);
}
@media (min-width: $xxlarge + 1) {
  @include make-layout(-xxl-gt);
  @include make-hide(-xxl-gt);
  @include make-grid(-xxl-gt);
  @include make-utils(-xxl-gt);
}
