{"version":3,"sources":["meteor://ðŸ’»app/server/schemas/board.js","meteor://ðŸ’»app/server/schemas/card.js","meteor://ðŸ’»app/server/schemas/chapter.js","meteor://ðŸ’»app/server/schemas/level.js","meteor://ðŸ’»app/server/schemas/sponsorCard.js","meteor://ðŸ’»app/server/schemas/subject.js","meteor://ðŸ’»app/server/schemas/zModule.js","meteor://ðŸ’»app/server/main.js"],"names":["boardSchema","SimpleSchema","name","type","String","label","module","exports","cardSchema","title","content","created","Date","updated","author","Meteor","users","schema","sortKey","Number","require","chapterSchema","chapter","cards","Array","levelSchema","board","sponsor","logo","Object","subjects","subjectSchema","level","color","moduleSchema","subject","chapters","module1","link","v","Mongo","Accounts","default","zModuleSchema","sponsorCardSchema","sponsorCards","Collection","boards","levels","modules","urls","verifyEmail","token","url","absoluteUrl","resetPassword","config","sendVerificationEmail","forbidClientAccountCreation","emailTemplates","enrollAccount","user","profile","text","methods","removeEmail","oldEmail","emails","length","_id","address","addEmail","obj","email","sendVerification","update","$pop","verify","error","console","log","extendProfile","userId","$set","fields","addUser","createUser","loadAllData","records","find","count","allBoards","fetch","result","map","boardId","boardName","rest","allLevels","allLevelsWithSubjects","levelId","levelName","levelRest","allSubjects","allSubjectsWithNames","subjectData","loadBoards","selector","res","loadLevelsByBoardId","id","loadSubjects","addSubject","insert","addBoard","addLevel","loadModules","getAllCardsByModule","moduleId","moduleData","findOne","flatCards","reduce","acc","chapterId","chapterData","chapterCards","cardId","data","getModuleById","chaptersWithCards","getModulesBySubject","addZModule","loadChapters","sort","addChapter","addCard","card","getAllCards","loadCards","updateCard","data_updated","updateChapter","$push","addSubjectToUser","subjectId","updateChapterWithCard","getChapterByCard","allChapters","forEach","getKeywords","allModules","subjectName","getSubjectName","getSubjectKeywords","getLevelKeywords","getBoardKeywords","getBoardKeyword","genericSearch","searchable","getBoardIdByLevel","loadSubjectName","getSubjectNameByModuleId","results","subjectResults","subjectRes","deleteCard","remove","removeCardRef","$pull","getTeam","getAllUsers","skip","parseInt","offset","limit","createdAt","getAllSubjects","findUserRole","role","findUserSubjects","getUserSubjects","addLastPosition","$eq","position","progress","moduleName","err","upsert","lastPositions","timestamp","getUser","getSubjectById","addSponsorContent","isNew","updateSponsorContent","updateSponsorContentWithoutContent","getSponsorCard","getAllSponsorCards","resp","startup"],"mappings":"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","file":"/app.js","sourcesContent":["boardSchema = new SimpleSchema({\n  name: {\n    type: String,\n    label: 'title',\n  },\n});\n\nmodule.exports = boardSchema;\n","cardSchema = new SimpleSchema({\n  title: {\n    type: String,\n    label: 'title',\n  },\n  content: {\n    type: String,\n    label: 'content',\n  },\n  created: {\n    type: Date,\n    label: 'data_created',\n  },\n  updated: {\n    type: Date,\n    label: 'data_updated',\n  },\n  author: {\n    type: Meteor.users.schema,\n    label: 'author',\n  },\n  sortKey: {\n    type: Number,\n    label: 'sortKey',\n  },\n});\n\nmodule.exports = cardSchema;\n","const cardSchema = require('./card');\n\nchapterSchema = new SimpleSchema({\n  chapter: {\n    type: String,\n    label: 'name',\n  },\n  created: {\n    type: Date,\n    label: 'created',\n  },\n  sortKey: {\n    type: Number,\n    label: 'sortKey',\n  },\n  cards: { type: Array },\n  'cards.$': { type: cardSchema },\n});\nmodule.exports = chapterSchema;\n","const boardSchema = require('./board');\n\nlevelSchema = new SimpleSchema({\n  board: {\n    type: boardSchema,\n    label: 'board',\n  },\n  name: {\n    type: String,\n    label: 'name',\n  },\n});\n\nmodule.exports = levelSchema;\n","schema = new SimpleSchema({\n  title: {\n    type: String,\n    label: 'title',\n  },\n  sponsor: {\n    type: String,\n    label: 'sponsor',\n  },\n  logo: {\n    type: String,\n    label: 'logo',\n  },\n  content: {\n    type: [Object],\n    label: 'content',\n  },\n  created: {\n    type: Date,\n    label: 'created',\n  },\n  subjects: {\n    type: [Object],\n    label: 'subjects',\n  },\n});\n\nmodule.exports = schema;\n","const boardSchema = require('./board');\nconst levelSchema = require('./level');\n\nsubjectSchema = new SimpleSchema({\n  board: {\n    type: boardSchema,\n    label: 'board',\n  },\n  level: {\n    type: levelSchema,\n    label: 'level',\n  },\n  name: {\n    type: String,\n    label: 'name',\n  },\n  color: {\n    type: String,\n    label: 'color',\n  },\n});\n\nmodule.exports = subjectSchema;\n","const subjectSchema = require('./subject');\nconst chapterSchema = require('./chapter');\n\nmoduleSchema = new SimpleSchema({\n  subject: {\n    type: subjectSchema,\n    label: 'subject',\n  },\n  name: {\n    type: String,\n    label: 'name',\n  },\n  chapters: { type: Array },\n  'chapters.$': { type: chapterSchema },\n\n});\n\nmodule.exports = moduleSchema;\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { Accounts } from 'meteor/accounts-base';\n\nimport boardSchema from './schemas/board.js';\nimport levelSchema from './schemas/level.js';\nimport subjectSchema from './schemas/subject.js';\nimport zModuleSchema from './schemas/zModule.js';\nimport cardSchema from './schemas/card.js';\nimport chapterSchema from './schemas/chapter.js';\nimport sponsorCardSchema from './schemas/sponsorCard.js';\n\nconst sponsorCards = new Mongo.Collection('sponsorCards');\nsponsorCards.schema = sponsorCardSchema;\n\nconst boards = new Mongo.Collection('boards');\nboards.schema = boardSchema;\n\nconst levels = new Mongo.Collection('levels');\nlevels.schema = levelSchema;\n\nconst subjects = new Mongo.Collection('subjects');\nsubjects.schema = subjectSchema;\n\nconst modules = new Mongo.Collection('modules');\nmodules.schema = zModuleSchema;\n\nconst cards = new Mongo.Collection('cards');\ncards.schema = cardSchema;\n\nconst chapters = new Mongo.Collection('chapters');\nchapters.schema = chapterSchema;\n\nAccounts.urls.verifyEmail = (token) => {\n  const url = Meteor.absoluteUrl(`/email/verify/${token}`);\n  return url;\n};\nAccounts.urls.resetPassword = (token) => {\n  const url = Meteor.absoluteUrl(`/password/reset/${token}`);\n  return url;\n};\nAccounts.config({ sendVerificationEmail: true, forbidClientAccountCreation: false });\n\nAccounts.emailTemplates.enrollAccount.subject = (user) => `Welcome to Znotes, ${user.profile.name}`;\nAccounts.emailTemplates.enrollAccount.text = (user, url) => ` To activate your account, simply click the link below:\\n\\n${\n  url}`;\n\nMeteor.methods({\n  // createUser(user) {\n  //     users.schema.validate(user);\n  //     users.insert(user);\n  //     return \"success\";\n  // },\n  removeEmail(user) {\n    const oldEmail = user.emails;\n    if (oldEmail.length >= 1) {\n      Accounts.removeEmail(user._id, user.emails[0].address);\n    }\n    return 'old email was successfully removed';\n  },\n  addEmail(obj) {\n    Accounts.addEmail(obj.user._id, obj.email);\n  },\n  sendVerification(user) {\n    Meteor.users.update({ _id: user._id }, { $pop: { 'services.email.verificationTokens': -1 } });\n    Accounts.sendVerificationEmail(user._id);\n  },\n  verify(token) {\n    Accounts.verifyEmail(token, (error) => {\n      if (error) console.log('Failed to verify the email');\n      else console.log('The email is verified');\n    });\n  },\n  extendProfile(obj) {\n    return Meteor.users.update({ _id: obj.userId }, { $set: obj.fields });\n  },\n  addUser(user) {\n    Accounts.createUser(user);\n  },\n  loadAllData() {\n    const records = boards.find({}).count();\n    if (records === 0) {\n      return [];\n    }\n    const allBoards = boards.find({}).fetch();\n    /* As we need all the data we need to go 3 levels.\n      We want to achive the following structure\n      [\n        {\n          name: 1,\n          levels: [\n              {\n                name: 1.1,\n                board: 1,\n                subjects: [\n                  {\n                    name: Math,\n                    board: <board_id>\n                    level: <level_id>\n                    boardName: 1,\n                    levelName: 1.1\n                  }\n                  {\n                    name: Programming,\n                    board: <board_id>\n                    level: <level_id>\n                    boardName: 1,\n                    levelName: 1.1\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n        Of course, this sucks, but that's what you get\n        when you use relational database ideas in\n        non-relational databases\n    */\n    const result = allBoards.map(({ _id: boardId, name: boardName, ...rest }) => {\n      const allLevels = levels.find({ board: boardId }).fetch();\n      const allLevelsWithSubjects = allLevels.map(({\n        _id: levelId,\n        name: levelName,\n        ...levelRest\n      }) => {\n        const allSubjects = subjects.find({ level: levelId }).fetch();\n        const allSubjectsWithNames = allSubjects.map((subjectData) => ({\n          ...subjectData,\n          boardName,\n          levelName,\n        }));\n        return {\n          ...levelRest,\n          levelId,\n          name: levelName,\n          board: boardName,\n          subjects: allSubjectsWithNames,\n        };\n      });\n      return {\n        ...rest,\n        boardId,\n        name: boardName,\n        levels: allLevelsWithSubjects,\n      };\n    });\n    return result;\n  },\n  loadBoards(selector) {\n    const records = boards.find(selector).count();\n    if (records === 0) {\n      return [];\n    }\n    const res = boards.find(selector).fetch();\n    return res;\n  },\n  loadLevelsByBoardId(id) {\n    const records = levels.find({ board: id }).count();\n    if (records === 0) {\n      return [];\n    }\n    const res = levels.find({ board: id }).fetch();\n    return res;\n  },\n  loadSubjects(selector) {\n    const records = subjects.find(selector).count();\n    if (records === 0) {\n      return [];\n    }\n    const res = subjects.find(selector).fetch();\n    return res;\n  },\n  addSubject(subject) {\n    return subjects.insert(subject);\n  },\n  addBoard(board) {\n    return boards.insert(board);\n  },\n  addLevel(level) {\n    return levels.insert(level);\n  },\n  loadModules(selector) {\n    const records = modules.find(selector).count();\n    if (records === 0) {\n      return [];\n    }\n    const res = modules.find(selector).fetch();\n    return res;\n  },\n  getAllCardsByModule(moduleId) {\n    const records = modules.find({ _id: moduleId }).count();\n    if (records === 0) {\n      return [];\n    }\n    const moduleData = modules.findOne({ _id: moduleId });\n    const flatCards = moduleData.chapters.reduce((acc, { _id: chapterId }) => {\n      const chapterData = chapters.findOne({ _id: chapterId });\n      const chapterCards = chapterData.cards.map(({ _id: cardId }) => {\n        const data = cards.findOne({ _id: cardId });\n        return data;\n      });\n      return [...acc, ...chapterCards];\n    }, []);\n    return flatCards;\n  },\n  getModuleById(moduleId) {\n    const records = modules.find({ _id: moduleId }).count();\n    if (records === 0) {\n      return [];\n    }\n    const moduleData = modules.findOne({ _id: moduleId });\n    const chaptersWithCards = moduleData.chapters.map(({ _id: chapterId, ...rest }) => {\n      const chapterData = chapters.findOne({ _id: chapterId });\n      const chapterCards = chapterData.cards.map(({ _id: cardId }) => {\n        const data = cards.findOne({ _id: cardId });\n        return data;\n      });\n      return {\n        ...rest,\n        ...chapterData,\n        cards: chapterCards,\n      };\n    });\n    return {\n      ...moduleData,\n      chapters: chaptersWithCards,\n    };\n  },\n  getModulesBySubject(subject) {\n    const records = modules.find({ subject }).count();\n    if (records === 0) {\n      return [];\n    }\n    const res = modules.find({ subject }).fetch();\n    return res;\n  },\n  addZModule(module) {\n    return modules.insert(module);\n  },\n  loadChapters(selector) {\n    const records = chapters.find(selector).count();\n    if (records === 0) {\n      return [];\n    }\n    const res = chapters.find(selector, { sort: { created: 1 } }).fetch();\n    return res;\n  },\n  addChapter(chapter) {\n    return chapters.insert(chapter);\n  },\n  addCard(card) {\n    return cards.insert(card);\n  },\n  getAllCards() {\n    const records = cards.find({}).count();\n    if (records === 0) {\n      return [];\n    }\n    const res = cards.find({}).fetch();\n    return res;\n  },\n  loadCards(id) {\n    const records = cards.find({ _id: id }).count();\n    if (records === 0) {\n      return [];\n    }\n    const res = cards.find({ _id: id }).fetch();\n    return res;\n  },\n  updateCard(obj) {\n    return cards.update({ _id: obj.cardId }, {\n      $set: {\n        content: obj.content,\n        data_updated: obj.data_updated,\n        sortKey: obj.sortKey,\n        title: obj.title,\n        author: obj.author,\n      },\n    });\n  },\n  updateChapter(obj) {\n    return modules.update({ _id: obj.moduleId }, { $push: { chapters: obj.chapter } });\n  },\n  addSubjectToUser({ userId, subjectId }) {\n    const subject = subjects.findOne({ _id: subjectId });\n    return Meteor.users.update({ _id: userId }, { $push: { subjects: subject } });\n  },\n  updateChapterWithCard(obj) {\n    return chapters.update({ _id: obj.chapterId }, { $push: { cards: obj.cards } });\n  },\n  getChapterByCard(cardId) {\n    let chapterId;\n    const allChapters = chapters.find().forEach(function (chapter) {\n      const card = chapter.cards.forEach(function (card) {\n        if (card._id === cardId) {\n          chapterId = chapter._id\n          return;\n        }\n      })\n\n    });\n\n    return chapterId;\n\n\n  },\n  getKeywords() {\n    const records = modules.find({}).count();\n    if (records === 0) {\n      return [];\n    }\n    const allModules = modules.find({}, { fields: { _id: 0 } }).fetch();\n    const res = allModules.map(({ subject: subjectId, name }) => {\n      const { board, level, name: subjectName } = subjects.findOne({ _id: subjectId });\n      const { name: levelName } = levels.findOne({ _id: level });\n      const { name: boardName } = boards.findOne({ _id: board });\n      return {\n        name,\n        levelName,\n        boardName,\n        subjectName,\n        type: 'module',\n      };\n    });\n    return res;\n  },\n  getSubjectName(id) {\n    const records = subjects.find({}, { fields: { name: 1, _id: 0 } }).count();\n    if (records === 0) {\n      return [];\n    }\n    const res = subjects.find({}, { fields: { name: 1, _id: 0 } }).fetch();\n    return res;\n  },\n\n  getSubjectKeywords(obj) {\n    const records = subjects.find({}).count();\n    if (records === 0) {\n      return [];\n    }\n    const allSubjects = subjects.find({}, { fields: { _id: 0 } }).fetch();\n    const res = allSubjects.map(({ level: levelId, board: boardId, name }) => {\n      const { name: levelName } = levels.findOne({ _id: levelId });\n      const { name: boardName } = boards.findOne({ _id: boardId });\n      return {\n        name,\n        levelName,\n        boardName,\n        type: 'subject',\n      };\n    });\n    return res;\n  },\n  getLevelKeywords(obj) {\n    const records = levels.find({}).count();\n    if (records === 0) {\n      return [];\n    }\n    const allLevels = levels.find({}, { fields: { _id: 0 } }).fetch();\n    const res = allLevels.map(({ board: boardId, name }) => {\n      const { name: boardName } = boards.findOne({ _id: boardId });\n      return {\n        name,\n        boardName,\n        type: 'level',\n      };\n    });\n    return res;\n  },\n  getBoardKeywords(obj) {\n    const records = boards.find({}).count();\n    if (records === 0) {\n      return [];\n    }\n    const allBoards = boards.find({}, { fields: { name: 1, _id: 0 } }).fetch();\n    const res = allBoards.map((board) => ({\n      ...board,\n      type: 'board',\n    }));\n    return res;\n  },\n  getBoardKeyword(id) {\n    const records = boards.find({ _id: id }, { fields: { name: 1, _id: 0 } }).count();\n    if (records === 0) {\n      return [];\n    }\n    const res = boards.find({ _id: id }, { fields: { name: 1, _id: 0 } }).fetch();\n    return res;\n  },\n  genericSearch(searchable) {\n    let records;\n    records = modules.find({ name: searchable }, { fields: { _id: 1 } }).count();\n    if (records !== 0) {\n      return {\n        type: 'module',\n        id: modules.find({ name: searchable }, { fields: { _id: 1 } }).fetch(),\n      };\n    }\n    records = subjects.find({ name: searchable }, { fields: { _id: 1 } }).count();\n    if (records !== 0) {\n      return {\n        type: 'subject',\n        id: subjects.find({ name: searchable }, { fields: { _id: 1 } }).fetch(),\n      };\n    }\n    records = levels.find({ name: searchable }, { fields: { _id: 1 } }).count();\n    if (records !== 0) {\n      return {\n        type: 'level',\n        id: levels.find({ name: searchable }, { fields: { _id: 1 } }).fetch(),\n      };\n    }\n    records = boards.find({ name: searchable }, { fields: { _id: 1 } }).count();\n    if (records !== 0) {\n      return {\n        type: 'board',\n        id: boards.find({ name: searchable }, { fields: { _id: 1 } }).fetch(),\n      };\n    }\n    return [];\n  },\n  getBoardIdByLevel(levelId) {\n    const res = levels.find({ _id: levelId }).fetch();\n    const level = res[0];\n    return level.board;\n  },\n  loadSubjectName(id) {\n    const res = subjects.find({ _id: id }).fetch();\n    const subject = res[0];\n    return subject.name;\n  },\n  getSubjectNameByModuleId(id) {\n    const results = modules.find({ _id: id }).fetch();\n    const res = results[0];\n    const subjectId = res.subject;\n    const subjectResults = subjects.find({ _id: subjectId }).fetch();\n    const subjectRes = subjectResults[0];\n    return subjectRes.name;\n  },\n  deleteCard(id) {\n    return cards.remove({ _id: id });\n  },\n  removeCardRef(selector) {\n    return chapters.update({ _id: selector.chapterId }, { $pull: { cards: { _id: selector.cardId } } });\n  },\n  getTeam(selector) {\n    return Meteor.users.find({}).fetch();\n  },\n  getAllUsers(selector) {\n    return Meteor.users.find({}, { skip: parseInt(selector.offset), limit: parseInt(selector.limit) }, { sort: { createdAt: -1 } }).fetch();\n  },\n  getAllSubjects() {\n    const records = subjects.find({}).count();\n    if (records === 0) {\n      return [];\n    }\n    const allSubjects = subjects.find({}).fetch();\n    const res = allSubjects.map(({ level: levelId, board: boardId, ...rest }) => {\n      const { name: levelName } = levels.findOne({ _id: levelId });\n      const { name: boardName } = boards.findOne({ _id: boardId });\n      return {\n        ...rest,\n        level: levelId,\n        board: boardId,\n        levelName,\n        boardName,\n      };\n    });\n    return res;\n  },\n  findUserRole(id) {\n    const records = Meteor.users.find({ _id: id }, { fields: { role: 1, _id: 0 } }).count();\n    if (records === 0) {\n      return [];\n    }\n    const res = Meteor.users.find({ _id: id }, { fields: { role: 1, _id: 0 } }).fetch();\n    return res;\n  },\n  findUserSubjects(id) {\n    const records = Meteor.users.find({ _id: id }, { fields: { subjects: 1, _id: 0 } }).count();\n    if (records === 0) {\n      return [];\n    }\n    const res = Meteor.users.find({ _id: id }, { fields: { subjects: 1, _id: 0 } }).fetch();\n    return res;\n  },\n  getUserSubjects(id) {\n    const records = Meteor.users.find({ _id: id }, { fields: { subjects: 1, _id: 0 } }).count();\n    if (records === 0) {\n      return [];\n    }\n    const { subjects: allSubjects } = Meteor.users.findOne({ _id: id },\n      { fields: { subjects: 1, _id: 0 } });\n    const res = allSubjects.map(({ level: levelId, board: boardId, ...rest }) => {\n      const { name: levelName } = levels.findOne({ _id: levelId });\n      const { name: boardName } = boards.findOne({ _id: boardId });\n      return {\n        ...rest,\n        level: levelId,\n        board: boardId,\n        levelName,\n        boardName,\n      };\n    });\n    return res;\n  },\n  addLastPosition(obj) {\n    Meteor.users.update(\n      { _id: obj.userId, 'lastPositions.id': { $eq: obj.subject.id } },\n      {\n        $set: {\n          'lastPositions.$.position': obj.subject.position,\n          'lastPositions.$.progress': obj.subject.progress,\n          'lastPositions.$.timestamp': new Date(),\n          'lastPositions.$.moduleName': obj.subject.moduleName,\n        },\n      },\n      {}, function (err, result) {\n        if (err) {\n          console.log(err);\n        } else if (result != 1) {\n          Meteor.users.upsert({ _id: obj.userId }, {\n            $push: {\n              lastPositions: {\n                id: obj.subject.id,\n                position: obj.subject.position,\n                progress: obj.subject.progress,\n                moduleName: obj.subject.moduleName,\n                timestamp: new Date(),\n              },\n            },\n          });\n        }\n\n        // if result.nMatched == 0 then make your $addToSet\n        // because there are no query\n      },\n    );\n\n    // return Meteor.users.upsert({_id: obj.userId}, {$push: {lastPositions: {id: obj.subject.id, position: obj.subject.position}}});\n  },\n  getUser(id) {\n    const records = Meteor.users.find({ _id: id },\n      { fields: { lastPositions: 1, _id: 0 } },\n      { sort: { timestamp: 1 } }).count();\n    if (records === 0) {\n      return [];\n    }\n    const res = Meteor.users.find({ _id: id }, { fields: { lastPositions: 1, _id: 0 } }).fetch();\n    return res;\n  },\n  getSubjectById(id) {\n    const records = subjects.find({ _id: id }).count();\n    if (records === 0) {\n      return [];\n    }\n    const { level: levelId, board: boardId, ...rest } = subjects.findOne({ _id: id });\n    const { name: levelName } = levels.findOne({ _id: levelId });\n    const { name: boardName } = boards.findOne({ _id: boardId });\n    return {\n      ...rest,\n      level: levelId,\n      board: boardId,\n      levelName,\n      boardName,\n    };\n  },\n  addSponsorContent(card) {\n    const records = sponsorCards.find({ sponsor: card.sponsor }).count();\n    if (records === 0) {\n      return sponsorCards.insert(card);\n    }\n    if (card.isNew) {\n      delete card.isNew;\n      updateSponsorContent(card);\n    } else {\n      delete card.isNew;\n      updateSponsorContentWithoutContent(card);\n    }\n  },\n  getSponsorCard(id) {\n    const records = sponsorCards.find({ sponsor: id }).count();\n    if (records === 0) {\n      return [];\n    }\n    const res = sponsorCards.find({ sponsor: id }).fetch();\n    return res;\n  },\n  getAllSponsorCards(obj) {\n    const records = sponsorCards.find({}).count();\n    if (records === 0) {\n      return [];\n    }\n    const res = sponsorCards.find({}).fetch();\n    return res;\n  },\n\n});\n\nfunction updateSponsorContent(card) {\n  sponsorCards.update({ sponsor: card.sponsor }, {\n    $push: {\n      content: card.content[0],\n    },\n  }, {}, (err, resp) => {\n    if (err) {\n      console.log(err);\n    } else {\n      sponsorCards.update({ sponsor: card.sponsor }, {\n        $set: {\n          logo: card.logo,\n          subjects: card.subjects,\n        },\n      });\n    }\n  });\n}\nfunction updateSponsorContentWithoutContent(card) {\n  return sponsorCards.update({ sponsor: card.sponsor }, {\n    $set: {\n      logo: card.logo,\n      subjects: card.subjects,\n    },\n  });\n}\n\nMeteor.startup(() => {\n\n});\n"]}